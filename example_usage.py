#!/usr/bin/env python3
"""
Script de ejemplo que demuestra clasificaci√≥n de textos e im√°genes
Muestra ambos flujos de trabajo en un solo lugar
"""

import os
import json
from pathlib import Path

# Verificar si las dependencias est√°n instaladas
try:
    from classify_images_with_ollama import OllamaImageClassifier
    OLLAMA_AVAILABLE = True
except ImportError:
    OLLAMA_AVAILABLE = False
    print("‚ö†Ô∏è M√≥dulo de clasificaci√≥n de im√°genes no disponible")

print("="*70)
print("EJEMPLO: CLASIFICACI√ìN DE TEXTOS E IM√ÅGENES CON LLMs")
print("="*70)


def ejemplo_clasificacion_texto():
    """
    Ejemplo de clasificaci√≥n de texto con OpenAI
    """
    print("\n" + "="*70)
    print("üìù EJEMPLO 1: CLASIFICACI√ìN DE TEXTO")
    print("="*70)
    
    # Verificar si tenemos la API key
    api_key = os.getenv('OPENAI_API_KEY')
    if not api_key:
        print("\n‚ö†Ô∏è Para usar clasificaci√≥n de texto con OpenAI:")
        print("   export OPENAI_API_KEY='tu-api-key-aqui'")
        print("\nüí° Ejemplo de uso con la API de OpenAI:")
        print("""
from openai import OpenAI

client = OpenAI(api_key='tu-api-key')

# Clasificar una frase
prompt = "Clasifica esta frase: 'Me encanta programar en Python'"
response = client.chat.completions.create(
    model='gpt-4o-mini',
    messages=[
        {"role": "system", "content": "Eres un clasificador de texto"},
        {"role": "user", "content": prompt}
    ]
)

print(response.choices[0].message.content)
        """)
        return
    
    print("‚úÖ API key de OpenAI configurada")
    print("üí° Ejecuta 'python classify_with_gpt.py' para clasificaci√≥n completa")


def ejemplo_clasificacion_imagen():
    """
    Ejemplo de clasificaci√≥n de im√°genes con Ollama
    """
    print("\n" + "="*70)
    print("üñºÔ∏è EJEMPLO 2: CLASIFICACI√ìN DE IM√ÅGENES")
    print("="*70)
    
    if not OLLAMA_AVAILABLE:
        print("\n‚ùå M√≥dulo de clasificaci√≥n de im√°genes no disponible")
        print("üí° Aseg√∫rate de que classify_images_with_ollama.py est√© en el directorio")
        return
    
    # Crear clasificador
    classifier = OllamaImageClassifier()
    
    # Verificar conexi√≥n
    print("\nüîç Verificando conexi√≥n con Ollama...")
    if not classifier.check_connection():
        print("\n‚ùå No se puede conectar con Ollama")
        print("\nüí° Para usar clasificaci√≥n de im√°genes:")
        print("   1. Instala Ollama: https://ollama.ai")
        print("   2. Inicia el servidor: ollama serve")
        print("   3. Instala un modelo: ollama pull gemma3:27b-it-qat")
        return
    
    print("\n‚úÖ Conexi√≥n con Ollama exitosa")
    
    # Crear directorio de ejemplo si no existe
    example_dir = Path("images_example")
    if not example_dir.exists():
        example_dir.mkdir(parents=True, exist_ok=True)
        print(f"\nüìÅ Directorio '{example_dir}' creado")
        print("üí° Coloca algunas im√°genes en este directorio para probar la clasificaci√≥n")
        
        # Crear un archivo de instrucciones
        instructions_file = example_dir / "README.txt"
        with open(instructions_file, 'w', encoding='utf-8') as f:
            f.write("""
INSTRUCCIONES PARA CLASIFICACI√ìN DE IM√ÅGENES
==============================================

1. Coloca tus im√°genes (JPG, PNG, etc.) en este directorio
2. Ejecuta: python example_usage.py
3. El script procesar√° todas las im√°genes autom√°ticamente

Formatos soportados: .jpg, .jpeg, .png, .webp, .bmp, .gif

Ejemplo de uso program√°tico:
----------------------------
from classify_images_with_ollama import OllamaImageClassifier

classifier = OllamaImageClassifier()

# Clasificar una imagen
result = classifier.classify_single_image(
    image_source="path/to/image.jpg",
    prompt="Describe esta imagen en detalle",
    is_url=False
)

print(result)
""")
        print(f"‚úÖ Instrucciones guardadas en '{instructions_file}'")
        return
    
    # Buscar im√°genes en el directorio
    image_extensions = {'.jpg', '.jpeg', '.png', '.webp', '.bmp', '.gif'}
    images = [f for f in example_dir.iterdir() 
             if f.is_file() and f.suffix.lower() in image_extensions]
    
    if not images:
        print(f"\n‚ö†Ô∏è No hay im√°genes en '{example_dir}'")
        print("üí° Coloca algunas im√°genes en el directorio y ejecuta el script nuevamente")
        return
    
    print(f"\nüì∏ Se encontraron {len(images)} im√°genes")
    
    # Crear prompt de ejemplo
    prompt = """Analiza esta imagen y proporciona una descripci√≥n detallada.

Por favor identifica:
1. Tema o sujeto principal
2. Entorno o contexto
3. Colores predominantes
4. Caracter√≠sticas notables

Responde en formato JSON con la siguiente estructura:
{
    "tema_principal": "descripci√≥n",
    "entorno": "descripci√≥n",
    "colores": ["color1", "color2"],
    "caracteristicas": ["caracter√≠stica1", "caracter√≠stica2"],
    "descripcion_general": "resumen breve"
}"""
    
    print("\nüîÑ Procesando im√°genes...")
    print("‚è≥ Este proceso puede tomar varios minutos dependiendo del n√∫mero de im√°genes")
    
    # Procesar el directorio
    results = classifier.process_directory(
        directory_path=example_dir,
        prompt=prompt,
        output_file="example_image_results.json"
    )
    
    # Mostrar resumen
    print("\n" + "="*70)
    print("üìä RESUMEN DE CLASIFICACI√ìN")
    print("="*70)
    print(f"Total de im√°genes: {len(results)}")
    successful = sum(1 for r in results if r.get('error') is None)
    print(f"Clasificaciones exitosas: {successful}")
    print(f"Errores: {len(results) - successful}")
    
    if successful > 0:
        print("\nüí° Resultados guardados en 'example_image_results.json'")
        print("   Puedes abrir este archivo para ver las clasificaciones detalladas")


def ejemplo_clasificacion_imagen_url():
    """
    Ejemplo de clasificaci√≥n de imagen desde URL
    """
    print("\n" + "="*70)
    print("üåê EJEMPLO 3: CLASIFICACI√ìN DE IMAGEN DESDE URL")
    print("="*70)
    
    if not OLLAMA_AVAILABLE:
        print("\n‚ùå M√≥dulo de clasificaci√≥n de im√°genes no disponible")
        return
    
    classifier = OllamaImageClassifier()
    
    if not classifier.check_connection():
        print("\n‚ùå No se puede conectar con Ollama")
        return
    
    # URL de ejemplo (imagen de prueba)
    example_url = "https://picsum.photos/800/600"
    
    print(f"\nüì∏ Clasificando imagen desde URL: {example_url}")
    print("üí° Esta es una imagen aleatoria de ejemplo de Lorem Picsum")
    
    prompt = "Describe esta imagen brevemente en espa√±ol"
    
    result = classifier.classify_single_image(
        image_source=example_url,
        prompt=prompt,
        is_url=True
    )
    
    if result:
        print("\n‚úÖ Clasificaci√≥n exitosa")
    else:
        print("\n‚ùå Error en la clasificaci√≥n")


def mostrar_menu():
    """
    Muestra el men√∫ de opciones
    """
    print("\n" + "="*70)
    print("MEN√ö DE EJEMPLOS")
    print("="*70)
    print("1. Clasificaci√≥n de texto con OpenAI (requiere API key)")
    print("2. Clasificaci√≥n de im√°genes desde directorio (requiere Ollama)")
    print("3. Clasificaci√≥n de imagen desde URL (requiere Ollama)")
    print("4. Ejecutar todos los ejemplos")
    print("0. Salir")
    print("="*70)


def main():
    """
    Funci√≥n principal
    """
    while True:
        mostrar_menu()
        
        try:
            opcion = input("\nSelecciona una opci√≥n (0-4): ").strip()
        except KeyboardInterrupt:
            print("\n\nüëã ¬°Hasta luego!")
            break
        
        if opcion == "0":
            print("\nüëã ¬°Hasta luego!")
            break
        elif opcion == "1":
            ejemplo_clasificacion_texto()
        elif opcion == "2":
            ejemplo_clasificacion_imagen()
        elif opcion == "3":
            ejemplo_clasificacion_imagen_url()
        elif opcion == "4":
            ejemplo_clasificacion_texto()
            ejemplo_clasificacion_imagen()
            ejemplo_clasificacion_imagen_url()
        else:
            print("\n‚ùå Opci√≥n no v√°lida. Por favor selecciona 0-4.")
        
        if opcion != "0":
            input("\nPresiona Enter para continuar...")


if __name__ == "__main__":
    main()
